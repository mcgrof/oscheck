# SPDX-License-Identifier GPL-2.0+
---
# Our sensible defaults for oscheck. You can override them by putitng
# your variables in these files, the later has major precedence:
#
# ansible/roles/oscheck/vars/main.yml
# ansible/extra_vars.yml

# We default to not run tests, because you may be calling ansible from
# vagrant or terraform which just provision systems. A user may want to
# run tests as a secondary step within the ansible directory alone given
# after a set of systems are setup all you'd need later is just to run
# ansible. Ansible and terraform would only be needed to do initial
# system provisioning.
oscheck_run_tests: false
oscheck_fstyp: "xfs"

oscheck_git: "https://gitlab.com/mcgrof/oscheck.git"
# where we'll clone oscheck to
oscheck_data: "{{ data_path }}/oscheck"
oscheck_data_target: "/var/lib/xfstests/"

# Ror instance you can use "-g quick" but note that this may produce
# not results as all quick tests may be expunded.
oscheck_extra_args: ""

fstests_git: "https://git.kernel.org/pub/scm/fs/xfs/xfstests-dev.git"
fstests_data: "{{ data_path }}/xfstests"
fstests_data_target: "/var/lib/xfstests/"

oscheck_admin: "devnull@kernel.org"

postfix_relayhost: "smtp.gmail.com"
postfix_relayport: "587"
postfix_mailhub: "{{ postfix_mailhub_server }}:{{ postfix_mailhub_port }}"
postfix_hostname: "{{ ansible_hostname }}"
postfix_domain: "{{ ansible_domain }}"
postfix_auth_user: 'foo@gmail.com'
postfix_auth_pass: 'mysuperd00perPassword'

# defaults file for the watchdog - whiskerlabs.watchdog
#
# Name of the watchdog service according to the target hosts' init system.
watchdog_service_name: watchdog.service

# See watchdog.conf manpage [1] for details on watchdog configuration options.
#
# [1] http://linux.die.net/man/5/watchdog.conf

# Path to the watchdog device.
watchdog_device: /dev/watchdog

# Email address to to which to send admin mail.
watchdog_admin: "{{ oscheck_admin }}"

# Interval between writes to the watchdog device, in seconds.
watchdog_interval: "10"

# Number of intervals skipped before logging messages (see
# watchdog.conf manpage).
watchdog_logtick: ""

# Directory in which to capture the stdout and stderr from
# repair-binary and test-binary execution.
watchdog_log_dir: ""

# Whether or not to lock the watchdog in memory so that it is never
# swapped out.
watchdog_realtime: yes

# Scheduler priority for realtime mode.
watchdog_priority: 1

# A list of IP addresses to be used with ping mode.
# e.g. [192.168.0.1]
watchdog_ping_addrs: []

# A list of network interfaces naems to be used with network mode.
# e.g. [eth0]
watchdog_interfaces: []

# A list of file items to be used with file mode. Items must contain a
# `name` field and optionally a `change` field (see watchdog.conf
# manpage).
# e.g. - { name: "/var/run/thing.pid", change: 60 }
watchdog_files: []

# A list of pidfiles to be used with server test mode.
# e.g. [/var/run/syslogd.pid]
watchdog_pidfiles: []

# Maximum allowed load averages, over one-, five-, and 15-minute
# spans.
watchdog_max_load_1: ""
watchdog_max_load_5: ""
watchdog_max_load_15: ""

# Minimum amount of virtual memory, in number of pages.
watchdog_min_memory: ""

# Binary used to execute user-defined repair actions.
watchdog_repair_binary: ""

# Maximum duration over which user-defined repair actions are allowed
# to run.
watchdog_repair_timeout: ""

# Binary used to execute user-defined tests.
watchdog_test_binary: ""

# Maximum duration over which user-defined tests are allowed to run.
watchdog_test_timeout: ""

# Path to the temperature device.
watchdog_temperature_device: ""

# Maximum allowed device temperature.
watchdog_max_temperature: ""
